# 注意：C:/dockerVolumes/ 不是绝对的，你可以替换成实际开发中的真实的地址，比如替换成 /etc/volumes/
services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: ggb
    volumes:
      - C:/dockerVolumes/mysql/data:/var/lib/mysql
      - C:/dockerVolumes/mysql/mysql.conf.d:/etc/mysql/conf.d:ro
    networks:
      my-net:
        ipv4_address: 10.1.0.2
    ports:
      - "3307:3306"
    restart: unless-stopped
    command: [
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_general_ci"
    ]

  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - C:/dockerVolumes/redis/data:/data
      - C:/dockerVolumes/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      my-net:
        ipv4_address: 10.1.0.3
    ports:
      - "6380:6379"
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - C:/dockerVolumes/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - C:/dockerVolumes/nginx/conf.d:/etc/nginx/conf.d:ro
      - C:/dockerVolumes/nginx/html:/usr/share/nginx/html
      - C:/dockerVolumes/nginx/log:/var/log/nginx
    networks:
      my-net:
        ipv4_address: 10.1.0.4
    ports:
      - "81:80"
    restart: unless-stopped

  ggb_server:
    image: ggb
    container_name: ggb_server
    depends_on:
      - mysql
      - redis
    networks:
      my-net:
        ipv4_address: 10.1.0.113
    ports:
      - "5313:5312"
    restart: unless-stopped

networks:
  my-net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.0.0/16

# 如果你事先创建了自定义网络，请使用下面的 networks 配置
#networks:
#  my-net:
#    external: true
